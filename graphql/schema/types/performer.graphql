enum GenderEnum {
  MALE
  FEMALE
  TRANSGENDER_MALE
  TRANSGENDER_FEMALE
  INTERSEX
}

enum BreastTypeEnum {
  NATURAL
  FAKE
  NA
}

type Measurements {
  cup_size: String
  band_size: Int
  waist: Int
  hip: Int
}

input MeasurementsInput {
  cup_size: String
  band_size: Int
  waist: Int
  hip: Int
}

enum EthnicityEnum {
  CAUCASIAN
  BLACK
  ASIAN
  INDIAN
  LATIN
  MIDDLE_EASTERN
  MIXED
  OTHER
}

enum EyeColorEnum {
  BLUE
  BROWN
  GREY
  GREEN
  HAZEL
  RED
}

enum HairColorEnum {
  BLONDE
  BRUNETTE
  BLACK
  RED
  AUBURN
  GREY
  BALD
  VARIOUS
  OTHER
}

type BodyModification {
  location: String!
  description: String
}

input BodyModificationInput {
  location: String!
  description: String
}

type Performer {
  id: ID!
  name: String!
  disambiguation: String
  aliases: [String!]!
  gender: GenderEnum
  urls: [URL!]!
  birthdate: FuzzyDate
  age: Int # resolver
  ethnicity: EthnicityEnum
  country: String
  eye_color: EyeColorEnum
  hair_color: HairColorEnum
  """Height in cm"""
  height: Int
  measurements: Measurements!
  breast_type: BreastTypeEnum
  career_start_year: Int
  career_end_year: Int
  tattoos: [BodyModification!]
  piercings: [BodyModification!]
}

input PerformerCreateInput {
  name: String!
  disambiguation: String
  aliases: [String!]
  gender: GenderEnum
  urls: [URLInput!]
  birthdate: FuzzyDateInput
  ethnicity: EthnicityEnum
  country: String
  eye_color: EyeColorEnum
  hair_color: HairColorEnum
  height: Int
  measurements: MeasurementsInput
  breast_type: BreastTypeEnum
  career_start_year: Int
  career_end_year: Int
  tattoos: [BodyModificationInput!]
  piercings: [BodyModificationInput!]
}

input PerformerUpdateInput {
  id: ID!
  name: String
  disambiguation: String
  aliases: [String!]
  gender: GenderEnum
  urls: [URLInput!]
  birthdate: FuzzyDateInput
  ethnicity: EthnicityEnum
  country: String
  eye_color: EyeColorEnum
  hair_color: HairColorEnum
  height: Int
  measurements: MeasurementsInput
  breast_type: BreastTypeEnum
  career_start_year: Int
  career_end_year: Int
  tattoos: [BodyModificationInput!]
  piercings: [BodyModificationInput!]
}

input PerformerDestroyInput {
  id: ID!
}

input PerformerEditDetailsInput {
  name: String
  disambiguation: String
  aliases: [String!]
  gender: GenderEnum
  urls: [URLInput!]
  birthdate: FuzzyDateInput
  ethnicity: EthnicityEnum
  country: String
  eye_color: EyeColorEnum
  hair_color: HairColorEnum
  height: Int
  measurements: MeasurementsInput
  breast_type: BreastTypeEnum
  career_start_year: Int
  career_end_year: Int
  tattoos: [BodyModificationInput!]
  piercings: [BodyModificationInput!]
}

input PerformerEditInput {
  """Not required for create type"""
  id: ID
  operation: OperationEnum!
  """Only required for merge type"""
  merge_source_ids: [ID!]
  """Not required for destroy type"""
  details: PerformerEditDetailsInput
  comment: String
}

type PerformerEdit {
  name: String
  disambiguation: String
  added_aliases: [String!]
  removed_aliases: [String!]
  gender: GenderEnum
  added_urls: [URL!]
  removed_urls: [URL!]
  birthdate: FuzzyDate
  ethnicity: EthnicityEnum
  country: String
  eye_color: EyeColorEnum
  hair_color: HairColorEnum
  """Height in cm"""
  height: Int
  measurements: Measurements
  breast_type: BreastTypeEnum
  career_start_year: Int
  career_end_year: Int
  added_tattoos: [BodyModification!]
  removed_tattoos: [BodyModification!]
  added_piercings: [BodyModification!]
  removed_piercings: [BodyModification!]
}

type QueryPerformersResultType {
  count: Int!
  performers: [Performer!]!
}

input EthnicityCriterionInput {
  value: EthnicityEnum
  modifier: CriterionModifier!
}

input BreastTypeCriterionInput {
  value: BreastTypeEnum
  modifier: CriterionModifier!
}

input EyeColorCriterionInput {
  value: EyeColorEnum
  modifier: CriterionModifier!
}

input HairColorCriterionInput {
  value: HairColorEnum
  modifier: CriterionModifier!
}

input BodyModificationCriterionInput {
  location: String
  description: String
  modifier: CriterionModifier!
}

input PerformerFilterType {
  """Searches name and aliases - assumes like query unless quoted"""
  names: String

  """Searches name only - assumes like query unless quoted"""
  name: String

  """Search aliases only - assumes like query unless quoted"""
  alias: String

  disambiguation: StringCriterionInput

  gender: GenderEnum
  
  """Filter to search urls - assumes like query unless quoted"""
  url: String

  birthdate: DateCriterionInput
  birth_year: DateCriterionInput
  age: IntCriterionInput

  ethnicity: EthnicityCriterionInput
  country: StringCriterionInput
  eye_color: EyeColorCriterionInput
  hair_color: HairColorCriterionInput
  height: IntCriterionInput

  cup_size: StringCriterionInput
  band_size: IntCriterionInput
  waist_size: IntCriterionInput
  hip_size: IntCriterionInput

  breast_type: BreastTypeCriterionInput

  career_start_year: IntCriterionInput
  career_end_year: IntCriterionInput
  tattoos: BodyModificationCriterionInput
  piercings: BodyModificationCriterionInput
}